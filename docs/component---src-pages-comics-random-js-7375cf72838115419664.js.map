{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/comics/random.js"],"names":["children","query","render","data","to","className","AboutPage","numComics","allGoogleSheetComicsRow","nodes","length","rand","Math","floor","random","window","navigate","url","React","Component"],"mappings":"2FAAA,yDAce,oBAAGA,EAAH,EAAGA,SAAH,OACC,kBAAC,IAAD,CACAC,MAAK,aAgBLC,OAAQ,SAAAC,GAEJ,OAEhB,oCACI,gCACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,kBAKJ,yBAAKC,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAAMD,GAAG,iBACL,mDAEJ,kBAAC,IAAD,CAAMA,GAAG,WACL,wCAEJ,kBAAC,IAAD,CAAMA,GAAG,WACL,wCAEJ,kBAAC,IAAD,CAAMA,GAAG,aACL,mDAEJ,kBAAC,IAAD,CAAMA,GAAG,aACL,0CAEJ,kBAAC,IAAD,CAAMA,GAAG,UACL,wCAIPJ,S,qKCxDQM,G,gIACjBJ,OAAA,WACI,OACQ,kBAAC,IAAD,CACAD,MAAK,aASDC,OAAQ,SAAAC,GACJ,IAAMI,EAAYJ,EAAKK,wBAAwBC,MAAMC,OAC/CC,EAAOR,EAAKK,wBAAwBC,MAAMG,KAAKC,MAAMD,KAAKE,SAASP,IAIzE,MAHI,oBAAOQ,QACTC,YAAS,WAAWL,EAAKM,KAGnB,kBAAC,IAAD,U,GApBOC,IAAMC,a","file":"component---src-pages-comics-random-js-7375cf72838115419664.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport FrontLink from \"./../components/front-link\"\n\nimport \"./../styles/layout.scss\"\n\nexport default ({ children }) => (\n                <StaticQuery\n                query={graphql`\n                    query {\n                        allFile(filter: {relativeDirectory: {eq: \"front\"}}) {\n                            edges {\n                                node {\n                                    relativePath\n                                    childImageSharp {\n                                        fluid(maxHeight: 300, maxWidth: 300) {\n                                            ...GatsbyImageSharpFluid\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                `}\n                render={data => {\n\n                    return (\n\n    <>\n        <header>\n            <Link to=\"/\">\n                Chris Clemens\n            </Link>\n        </header>\n\n        <div className=\"content\">\n            <div className=\"layout-links\">\n                <Link to=\"/commissioned\">\n                    <div>Commissioned Work</div>\n                </Link>\n                <Link to=\"/comics\">\n                    <div>Comics</div>\n                </Link>\n                <Link to=\"/videos\">\n                    <div>Videos</div>\n                </Link>\n                <Link to=\"/original\">\n                    <div>Original Articles</div>\n                </Link>\n                <Link to=\"/drawings\">\n                    <div>Drawings</div>\n                </Link>\n                <Link to=\"/about\">\n                    <div>About</div>\n                </Link>\n            </div>\n\n            {children}\n        </div>\n    </>\n\n                           )\n                }}\n                />\n               )\n","import React from \"react\"\nimport { Link, StaticQuery, navigate } from \"gatsby\"\n\nimport Layout from \"./../../components/layout\"\nimport Img from \"gatsby-image\"\nimport Helmet from 'react-helmet'\n\nimport \"./../../styles/comic.scss\"\n\nexport default class AboutPage extends React.Component {\n    render() {\n        return (\n                <StaticQuery\n                query={graphql`\n                    query {\n                          allGoogleSheetComicsRow {\n                                  nodes {\n                                      url\n                                        }\n                                    }\n                    }\n                    `}\n                    render={data=>{\n                        const numComics = data.allGoogleSheetComicsRow.nodes.length\n                        const rand = data.allGoogleSheetComicsRow.nodes[Math.floor(Math.random()*numComics)]\n                        if (typeof window !== `undefined`) {\n                          navigate('/comics/'+rand.url)\n                        }\n                        return (\n                                <Layout></Layout>\n\n                   )}}\n                />\n               )\n    }\n}\n"],"sourceRoot":""}